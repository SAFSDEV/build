
<!--                                                             -->
<!-- 2014.08.15  CANAGL  Initial Release                         -->
<!-- 2014.08.19  CANAGL  Selenium Include for build.xml Include  -->
<!-- 2014.11.20  CANAGL  Add OCR Support back into distribution  -->
<!--                                                             -->
<project name="selenium_build" basedir="." >
  
  <!--                                              -->
  <!--              seleniumplusjar                 -->
  <!-- Create ALL SELENIUMPLUS related JAR files    -->
  <!--                                              -->
  <target name="seleniumplus.jar" >
      
      <jar destfile="${safsjars}/SPFilterImageGUI.jar"
           manifest="${classes}/META-INF/MANIFEST.SPFILTERIMAGEGUI.MF"
           basedir="${classes}/"
           includes="org/safs/image/filter/**" />

      <jar destfile="${safsjars}/seleniumplus.jar"      
           manifest="${classes}/META-INF/MANIFEST.SELENIUMPLUS.MF"
           basedir="${classes}"
           includes="org/safs/selenium/**
                     org\safs\sockets\DebugListener.class 
                     org\safs\sockets\NamedListener.class
		     org\safs\android\auto\lib\*Console*.class 
		     org\safs\android\auto\lib\Process2*.class
		     org\safs\model\** 
		     org\safs\custom\**
		     *.dat 
		     *ResourceBundle*.properties 
		     *ResourceBundle*.properties.txt  
             org\apache\hc\client5\** 
		     org\safs\*.class 
		     org\safs\*.dat
      		 org\safs\autoit\**
      		 org\safs\auth\**
		     org\safs\control\**
		     org\safs\custom\**
		     org\safs\image\**
		     org\safs\install\**
		     org\safs\jvmagent\**
		     org\safs\logging\**
		     org\safs\natives\**
		     org\safs\persist\**
		     org\safs\rest\**
		     org\safs\reflect\**
		     org\safs\robot\**
		     org\safs\staf\**
		     org\safs\text\**
		     org\safs\tools\**
		     org\safs\rmi\engine\**
		     org\slf4j\impl\**
		     org\w3c\tools\codec\**
      	 	 org\safs\net\**
		     org\safs\xml\**
		     com\sebuilder\interpreter\**"
                     
           excludes="org/safs/selenium/install/
                     org/safs/model/examples/
                     org/safs/selenium/SeleniumProcessContainer/
                     org/safs/selenium/webdriver/lib/test/">
          <service type="javax.xml.transform.TransformerFactory"
                   provider="com.sun.org.apache.xalan.internal.xsltc.trax.TransformerFactoryImpl"/>
      </jar>

      <jar jarfile="${safsjars}/seleniumplus.jar" update="true"   
           basedir="${safssource}"
           includes="org/safs/selenium/**/*.java" 
           excludes="org/safs/selenium/install/
                     org/safs/selenium/webdriver/lib/test/" />
      
      <!-- copy file="${safsjars}/seleniumplus.jar" tofile="${safsjars}/selenium-plus-1.0.jar"  preservelastmodified="true" / -->
        
      <zip destfile="${safsjars}/_seleniumplus-lib-update.zip">
           
           <fileset dir="${safsjars}"
              	includes="SPFilterImageGUI.jar 
			     seleniumplus.jar
			     safsinput.jar 
			     safslogs.jar 
			     safsmaps.jar 
			     safsupdate.jar
			     safsvars.jar" />
			 <fileset dir="${safssource}/install/lib/"
			 	includes="javax.mail.jar
			 		      org.json.jar 
			 		      spock-core-1.0-groovy-2.4.jar 
			 		      slf4j-api-1.7.21.jar" />

             <fileset dir="${safs.dependencies}/saxon/" includes="Saxon-HE-9.7.0-8.jar"/>
             <fileset dir="${safs.dependencies}/httpclient5/" includes="httpc*.jar"/>
             <fileset dir="${safs.dependencies}/groovy/" includes="groovy-all-2.4.7.jar"/>

	   </zip>
  </target>
  
  <target name="_make.sp.dist" >  
     <delete dir="${seleniumdist}" />
     <mkdir dir="${seleniumdist}" />
     <mkdir dir="${seleniumdist}/extra/automation/ocr/gocrdata" />
     <mkdir dir="${seleniumdist}/libs" />
     <mkdir dir="${seleniumdist}/Java" />
     <mkdir dir="${seleniumdist}/Java64" />
     <mkdir dir="${seleniumdist}/eclipse" />
  </target>
  
  <target name="seleniumplus.win.dist" depends="_make.sp.dist, prepare.download" >

      <!-- ftp action="get" remotedir="${safsdev.win.java}" server="${server}" userid="${userid}" password="${passwd}"  preservelastmodified="true" >
          <fileset dir="${seleniumdist}/Java" includes="${JDK_WINDOWS}" /></ftp>
      <ftp action="get" remotedir="${safsdev.win.java}" server="${server}" userid="${userid}" password="${passwd}"  preservelastmodified="true" >
          <fileset dir="${seleniumdist}/Java64" includes="${JRE64_WINDOWS}" /></ftp>
      <ftp action="get" remotedir="${safsdev.win.eclipse}" server="${server}" userid="${userid}" password="${passwd}"  preservelastmodified="true" >
          <fileset dir="${seleniumdist}/eclipse" includes="${ECLIPSE_WINDOWS}" /></ftp-->

      <get dest="${seleniumdist}/Java" username="${userid}" password="${passwd}" usetimestamp="true">
          <url url="${server}${safsdev.win.java}/${JDK_WINDOWS}"/></get>   
      <get dest="${seleniumdist}/Java64" username="${userid}" password="${passwd}" usetimestamp="true">
          <url url="${server}${safsdev.win.java}/${JRE64_WINDOWS}"/></get>   
      <get dest="${seleniumdist}/eclipse" username="${userid}" password="${passwd}" usetimestamp="true">
          <url url="${server}${safsdev.win.eclipse}/${ECLIPSE_WINDOWS}"/></get>   
          
      <copy todir="${seleniumdist}/extra/automation/bin/" preservelastmodified="true" >
        <fileset dir="${safs.dependencies}/tools/ocr/ocrbin/" />
      </copy>
      <copy todir="${seleniumdist}/extra/automation/ocr/" preservelastmodified="true" >
        <fileset dir="${safs.dependencies}/tools/ocr/ocr/" />
      </copy>
      <unzip dest="${seleniumdist}/Java/" >
          <fileset dir="${seleniumdist}/Java/" includes="${JDK_WINDOWS}"/>
      </unzip>
      <unzip dest="${seleniumdist}/" >
          <fileset dir="${seleniumdist}/Java64/" includes="${JRE64_WINDOWS}"/>
      </unzip>
      <unzip dest="${seleniumdist}/eclipse/" >
          <fileset dir="${seleniumdist}/eclipse/" includes="${ECLIPSE_WINDOWS}"/>
      </unzip>
      <delete >
          <fileset dir="${seleniumdist}/Java/" includes="${JDK_WINDOWS}" />
	  	  <fileset dir="${seleniumdist}/Java64/" includes="${JRE64_WINDOWS}" />
          <fileset dir="${seleniumdist}/eclipse/" includes="${ECLIPSE_WINDOWS}" />
      </delete>
      <copy todir="${seleniumdist}/eclipse/plugins"  preservelastmodified="true" >
          <fileset dir="${safsjars}" includes="Seleniumplus_plugin*.jar" /></copy>
      <copy todir="${seleniumdist}/"  preservelastmodified="true" >
          <fileset dir="${safssource}/org/safs/selenium/install/" 
                   excludes="eclipse.ini
                             extra/Debug*.bat
                             extra/STAF*.bat
                             sample/
                             buildTestDesigner*.BAT" /></copy>
                             
      <copy todir="${seleniumdist}/libs"  preservelastmodified="true" >
          <fileset dir="${seleniumlibs}"  excludes="*-2.37.0.jar
						                            *.exe"/>
          <fileset dir="${safsjars}/" includes="safsinput.jar
                                                safslogs.jar
                                                safsmaps.jar
                                                safsupdate.jar
                                                safsvars.jar
                                                seleniumplus*.jar
                                                SPFilterImage*.jar" />
          <fileset dir="${safs.dependencies}/saxon/" includes="Saxon-HE-*.jar"/>
          <fileset dir="${safs.dependencies}/httpclient5/" includes="httpc*.jar"/>
          <fileset dir="${safs.dependencies}/log4j/" includes="log4j*.jar"/>
          <fileset dir="${safs.dependencies}/groovy/" includes="groovy-all-*.jar"/>
          <fileset dir="${safs.dependencies}/spring-core/" includes="spring-core*.jar"/>
          <fileset dir="${safs.dependencies}/spring-web/" includes="spring-web*.jar"/>
          <fileset dir="${safssource}/install/lib/" includes="commons-logging-*.jar
                                                              commons-lang*.jar
                                                              ja*.jar
                                                              JSTAFEmbedded.jar
                                                              slf4j-api-*.jar
                                                              spock-core-1.0-groovy-2.4.jar
                                                              org.json.jar
                                                              juniversalchardet*.jar
                                                              jna*.zip
                                                              jna*.jar
                                                              javax.mail.jar
                                                              platform.zip
                                                              win32-x86.zip" />
      	 <fileset dir="${autoitlibs}"  excludes="*.exe" />
      </copy>
      <copy todir="${seleniumdist}/extra"  preservelastmodified="true" >
	 	<fileset dir="${seleniumlibs}/" includes="*.exe" />
      	<fileset dir="${autoitlibs}/" includes="*.exe" />
      </copy>
      <!-- Stop distributing due to sel-ser-stand.jar covers all jars 
      <unzip dest="${seleniumdist}/libs/" >
          <patternset>
             <include name="selenium-*/libs/*.jar" />
          </patternset>
          <fileset dir="${seleniumdist}/libs/"
                   includes="selenium-java-*.zip" />
          <mapper type="flatten" />
      </unzip>
      -->
      <zip destfile="${seleniumdist}/TestDesigner.ZIP"
           basedir="${seleniumdist}"
           includes="Setup.bat
                     InstallInstructions.txt
                     libs/**
                     install/**
                     uninstall/**
                     Java/**
		             Java64/**
                     extra/**
                     eclipse/**
                     doc/**" />
      
  </target>

  <target name="selenium.plugin.build" >
      <java jar="${ECLIPSEJARS}/${ECLIPSELAUNCHER}"
            fork="true"
            output="${basedir}/selenium.plugin.build.log" >
            <sysproperty key="ECLIPSEJARS" value="${ECLIPSEJARS}" />
            <sysproperty key="SAFSJARS" value="${basedir}/safsjars" />
            <arg value="-application" /> 
            <arg value="org.eclipse.ant.core.antRunner" />
            <arg value="-buildfile" />
            <arg value="${basedir}/source/common/eclipse/plugins/Seleniumplus_plugin/build.xml" />
            <arg value="build.update.jar" />
      </java>
  </target>
  
  <target name="run.regression.test" depends="seleniumplus.lib.update.runtime, git.clone.se.regression">
  	<!-- TODO: use java task instead of batch script to avoid OS dependency -->
	
	<!-- The variable 'TestBrowserNameParam' here is supposed to be defined by Jenkins when   -->
	<!-- calling the 'run.regression.test' Ant Task. At default, if the Jenkins calls this    -->
	<!-- task, it will use the browser defined in Regression MAP file. But the browser can    -->
	<!-- also be changed by adding Java Options when calling 'run.regression.test' Ant task   -->
	<!-- in Jenkins, like: '-DTestBrowserNameParam=explorer' or                               -->
	<!--                   '-DTestBrowserNameParam="explorer chrome firefox"'.                -->
	<if>
		<not>
			<isset property="TestBrowserNameParam"/>
		</not>
		<then>
			<property name="TestBrowserNameParam" value=""/>
			<property name="TestBrowserNamePrefix" value=""/>
		</then>
		<else>
			<property name="TestBrowserNamePrefix" value="/browser"/>
		</else>
	</if>
	
	<exec executable="cmd"
		  dir="${git.wdir.seplus.regression}"
		  resultproperty="exec.rc"
		  outputproperty="exec.output"
		  errorproperty="exec.error">
	  <arg value="/c"/>
	  <arg value="runAutomation.bat"/>
	  <arg value="${TestBrowserNamePrefix}" />
	  <arg value="${TestBrowserNameParam}"/>
	</exec>
  	
  	<property name="current.dir" location="." />
  	<!-- The regression will return failure-number as result, if it is not zero, then this task will fail. -->
  	<fail message="There are ${exec.rc} UNEXPECTED failures with parameter 'TestBrowserNameParam':'${TestBrowserNameParam}' in regression test. For details, refer to log files under ${current.dir}\${git.wdir.seplus.regression}\Logs">
      <condition>
		<not><equals arg1="${exec.rc}" arg2="0"/></not>
      </condition>
	</fail>
  </target>
	
  <target name="seleniumplus.lib.update.runtime" description="update seleniumplus libarary runtime environment" >
	<antcallback target="update.runtime" return="java.rc, java.output, java.error">
	  <param name="update.runtime.jar" value="${SELENIUM_PLUS}\update_bak\libs\safsupdate.jar" />
	  <param name="update.runtime.log" value="${SELENIUM_PLUS}\${update.runtime.se.libs.log}" />
	  <param name="update.runtime.title" value="SeleniumPlus Libs Update" />
	  <param name="update.runtime.source.zip" value="${SE_LIB_UPDATE}" />
	  <param name="update.runtime.target.dir" value="${SELENIUM_PLUS}" />
	  <param name="update.runtime.backup.dir" value="${SELENIUM_PLUS}\update_bak" />
	  <param name="debug" value="false" />
	</antcallback>

  	<!-- If update fails, then this task will fail.-->
	<fail message="Fail to update selenium plus library runtime. For details, refer to file '${SELENIUM_PLUS}\${update.runtime.se.libs.log}'.">
      <condition>
		<or>
		  <equals arg1="${java.rc}" arg2="-1"/>
		  <equals arg1="${java.rc}" arg2="-2"/>
		</or>
      </condition>
	</fail>
  </target>
	
  <target name="seleniumplus.pulgin.update.runtime" description="update seleniumplus plugin runtime environment" >
	<antcallback target="update.runtime" return="java.rc, java.output, java.error">
	  <param name="update.runtime.jar" value="${SELENIUM_PLUS}\update_bak\libs\safsupdate.jar" />
	  <param name="update.runtime.log" value="${SELENIUM_PLUS}\${update.runtime.se.plugin.log}" />
	  <param name="update.runtime.title" value="SeleniumPlus Plugin Update" />
	  <param name="update.runtime.source.zip" value="${SE_PLUGIN_UPDATE}" />
	  <param name="update.runtime.target.dir" value="${SELENIUM_PLUS}\eclipse\plugins" />
	  <param name="update.runtime.backup.dir" value="${SELENIUM_PLUS}\eclipse\plugins\update_bak" />
	  <param name="debug" value="false" />
	</antcallback>

  	<!-- If update fails, then this task will fail.-->
	<fail message="Fail to update selenium plus plugin runtime. For details, refer to file '${SELENIUM_PLUS}\${update.runtime.se.plugin.log}'.">
		<condition>
		  <or>
			<equals arg1="${java.rc}" arg2="-1"/>
			<equals arg1="${java.rc}" arg2="-2"/>
		  </or>
    </condition>
	</fail>
  </target>
	
  <!--                                                                                      -->
  <!--                          update.runtime                                              -->
  <!--                                                                                      -->
  <!--  Update SeleniumPlus/SAFS runtime environment                                        -->
  <!--                                                                                      -->
  <!--  Example command-line invocation:                                                    -->
  <!--                                                                                      -->
  <!--  java -jar %SELENIUM_PLUS%\update_bak\libs\safsupdate.jar -r -a -q -prompt:"SeleniumPlus Libs Update" -s:"%SE_LIB_UPDATE%" -t:"%SELENIUM_PLUS%" -b:"%SELENIUM_PLUS%\update_bak"                 -->
  <!--                                                                                      -->
  <!--  requires:                                                                           -->
  <!--            ${update.runtime.jar}                                                     -->
  <!--            ${update.runtime.log}                                                     -->
  <!--            ${update.runtime.title}                                                   -->
  <!--            ${update.runtime.source.zip}                                              -->
  <!--            ${update.runtime.target.dir}                                              -->
  <!--            ${update.runtime.backup.dir}                                              -->
  <!--  option:                                                                             -->
  <!--            ${debug}                                                                  -->
  <!--  return:                                                                             -->
  <!--            ${java.rc}                                                                -->
  <!--            ${java.output}                                                            -->
  <!--            ${java.error}                                                             -->	
  <!--                                                                                      -->
  <target name="update.runtime" description="update runtime environment" >
    <if><equals arg1="${debug}" arg2="true"/><then>
      <echo>java -jar "${update.runtime.jar}" -r -a -q -prompt:"${update.runtime.title}" -s:"${update.runtime.source.zip}" -t:"${update.runtime.target.dir}" -b:"${update.runtime.backup.dir}"</echo>
	  <echo>java out put can be found in file: ${update.runtime.log}</echo>
	</then></if>
	<copy todir="${SELENIUM_PLUS}\update_bak\libs" preservelastmodified="true" file="${SELENIUM_PLUS}\libs\safsupdate.jar"/>
    <java jar="${update.runtime.jar}"
    	   fork="true"
    	   output="${update.runtime.log}"
	       resultproperty="java.rc"
	       outputproperty="java.output"
           errorproperty="java.error" >
        <arg value="-r" /> 
        <arg value="-a" /> 
        <arg value="-q" /> 
        <arg value="-prompt:${update.runtime.title}" />
        <arg value="-s:${update.runtime.source.zip}" />
        <arg value="-t:${update.runtime.target.dir}" />
        <arg value="-b:${update.runtime.backup.dir}" />
    </java>
	
	<if><equals arg1="${debug}" arg2="true"/><then>
	  <echo>java.rc: ${java.rc}</echo>
	  <echo>java.output: ${java.output}</echo>
	  <echo>java.error: ${java.error}</echo>
	</then></if>
  </target>

  <target name="git.clone.se.regression" description="Clone from GitHub SAFSDEV/SeleniumPlus-REGRESSION" >
	<antcall target="git.repo.clone">
	  <param name="git.repo.tree" value="${git.wdir.seplus.regression}" />
	  <param name="git.repo.url.prefix" value="${git.repo.url.prefix}" />
	  <param name="git.repo.name" value="${git.repo.seplus.regression}" />
	  <param name="git.repo.branch" value="${git.branch.seplus.regression}" />
	</antcall>
  </target>

</project>  
